@page "/seguimiento-solicitud"
@using DIGESA.Models.DTOs
@using DIGESA.Models.Entities.DBDIGESA
@using DIGESA.Services.Interfaces
@using Microsoft.EntityFrameworkCore
@inject DbContextDigesa DbContext
@inject IQRService QRService
@inject NavigationManager NavManager

<PageTitle>Seguimiento de Solicitud</PageTitle>

<div class="container mt-5">
    <h3>Consulta el estado de tu solicitud</h3>
    <p>Introduce tu número de documento o código de paciente.</p>

    <div class="mb-3">
        <label>Número de documento:</label>
        <InputText @bind-Value="Documento" class="form-control" />
    </div>

    <button @onclick="BuscarSolicitud" class="btn btn-primary">Buscar</button>

    @if (Model != null)
    {
        <div class="card mt-4 p-3">
            <h5 class="card-title">Datos del paciente</h5>
            <ul>
                <li><strong>Nombre completo:</strong> @Model.NombreCompleto</li>
                <li><strong>Documento:</strong> @Model.NumeroDocumento</li>
                <li><strong>Fecha de registro:</strong> @(Model.FechaRegistro?.ToString("yyyy-MM-dd"))</li>
                <li><strong>Estado:</strong>
                    @if (Model.Aprobado)
                    {
                        <span class="text-success">✅ Aprobado</span>
                    }
                    else
                    {
                        <span class="text-warning">🕒 Pendiente</span>
                    }
                </li>
            </ul>

            @if (Model.Aprobado)
            {
                <div class="mt-3">
                    <h6>Carnet Digital con Código QR</h6>
                    <img src="@QRCodeDataUri" alt="Código QR del Carnet" class="img-fluid" />
                    <a href="@QRCodeDataUri" 
                       download="carnet-@Model.Id.ToString().Substring(0, Math.Min(Model.Id.ToString().Length, 8))-@DateTime.Now:yyyyMMddHHmmss}.png" 
                       class="btn btn-info btn-sm mt-2">
                        <Icon Name="IconName.Download" /> Descargar Carnet
                    </a>
                </div>
            }
        </div>
    }

    @if (!string.IsNullOrEmpty(Error))
    {
        <div class="alert alert-danger mt-3">@Error</div>
    }
</div>

@code {
    private string Documento { get; set; } = "";
    private PacienteSeguimientoDTO? Model { get; set; }
    private string? Error { get; set; }
    private string QRCodeDataUri { get; set; } = "";

    private async Task BuscarSolicitud()
    {
        var paciente = await DbContext.Paciente
            .Join(
                DbContext.Solicitud,
                p => p.Id,
                s => s.PacienteId,
                (p, s) => new PacienteSeguimientoDTO
                {
                    Id = p.Id,
                    NombreCompleto = p.NombreCompleto,
                    NumeroDocumento = p.NumeroDocumento,
                    FechaRegistro = s.FechaSolicitud,
                    EstadoSolicitud = s.Estado,
                    Aprobado = s.Estado == "Aprobada"
                })
            .FirstOrDefaultAsync(x => x.NumeroDocumento == Documento || x.Id.ToString() == Documento);

        if (paciente == null)
        {
            Error = "No se encontró ninguna solicitud con ese documento.";
            Model = null;
            return;
        }

        Model = paciente;
        Error = null;

        // Generar QR si está aprobado
        if (Model.Aprobado)
        {
            var qrText = $"DIGESA - ID: {Model.Id}\nNombre: {Model.NombreCompleto}\nDoc: {Model.NumeroDocumento}\nEstado: Aprobado";
            QRCodeDataUri = QRService.GenerateQRCode(qrText);
        }
    }
}